[
    {
        "id": "6654f6e517e71542",
        "type": "tab",
        "label": "Router Engine",
        "disabled": false,
        "info": "router",
        "env": []
    },
    {
        "id": "56e1b27d8d230e3f",
        "type": "tab",
        "label": "Front Yard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5b1f4133f210d4ec",
        "type": "tab",
        "label": "Back Yard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0acc06ab9565b279",
        "type": "group",
        "z": "6654f6e517e71542",
        "name": "Schedule management",
        "style": {
            "label": true
        },
        "nodes": [
            "fb8ad7aea57b6bed",
            "b60699c0b0671883",
            "d69e99cb3b05e6b9",
            "3c19de09d6abd82b",
            "c86891a9cd694b46",
            "b293c827d775ebfe",
            "150cc4f5a92e2036",
            "e4d0b3b50d6a3c74",
            "ef3684694d00fd12",
            "351bfdb306226ff8",
            "db52e3808a0e4d48"
        ],
        "x": 14,
        "y": 671.5,
        "w": 1212,
        "h": 269.5
    },
    {
        "id": "a91e2c4450d81c14",
        "type": "group",
        "z": "6654f6e517e71542",
        "name": "Central controller",
        "style": {
            "label": true,
            "stroke": "#ff0000"
        },
        "nodes": [
            "644c959c85ef1928",
            "1ec92144d1e66faf"
        ],
        "x": 1654,
        "y": 359,
        "w": 272,
        "h": 122
    },
    {
        "id": "e27dd930f7ebb7e8",
        "type": "group",
        "z": "6654f6e517e71542",
        "name": "Manual control",
        "style": {
            "label": true
        },
        "nodes": [
            "8bc79f15c0a688db",
            "79a0d0eb13560a84",
            "2ea1e99be30211b2",
            "67e4df38392a472a",
            "c5fcf09098ee0458",
            "3288b51e87c0cf0e",
            "2be20fd9fe210b05"
        ],
        "x": 14,
        "y": 279,
        "w": 932,
        "h": 182
    },
    {
        "id": "31b6deb47a9e7be4",
        "type": "group",
        "z": "6654f6e517e71542",
        "name": "Force state update",
        "style": {
            "label": true
        },
        "nodes": [
            "0655c63f03be8248",
            "8f3387aa9461f0b0",
            "bcb3d789004b5e9d"
        ],
        "x": 1214,
        "y": 539,
        "w": 412,
        "h": 122
    },
    {
        "id": "46e82b11dd71185d",
        "type": "group",
        "z": "6654f6e517e71542",
        "name": "WebSocket status updates",
        "style": {
            "label": true
        },
        "nodes": [
            "63308ea7f10df86b",
            "2ed07befb9e49e7c"
        ],
        "x": 1934,
        "y": 539,
        "w": 192,
        "h": 142
    },
    {
        "id": "3069d0b288ab8525",
        "type": "group",
        "z": "6654f6e517e71542",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1714093af39e1ecf",
            "5eef3ad2022205c8",
            "7043f089e62cf40c"
        ],
        "x": 454,
        "y": 499,
        "w": 392,
        "h": 122
    },
    {
        "id": "c4bff4d6e8023886",
        "type": "websocket-listener",
        "path": "/ws/io",
        "wholemsg": "false"
    },
    {
        "id": "4e04a4d03b8d4fb4",
        "type": "ical-config",
        "url": "./schedule.ical/gpio.ical",
        "caldav": "",
        "caltype": "ical",
        "name": "Default",
        "replacedates": false,
        "usecache": false,
        "username": "",
        "password": "",
        "calendar": "",
        "pastWeeks": "0",
        "futureWeeks": "4"
    },
    {
        "id": "8bc79f15c0a688db",
        "type": "http in",
        "z": "6654f6e517e71542",
        "g": "e27dd930f7ebb7e8",
        "name": "PUT /io",
        "url": "/io",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "79a0d0eb13560a84",
                "2ea1e99be30211b2"
            ]
        ]
    },
    {
        "id": "79a0d0eb13560a84",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "e27dd930f7ebb7e8",
        "name": "Body Mapper",
        "func": "\nmsg.payload = msg.payload.map(state => JSON.stringify(state)).join('\\n');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "67e4df38392a472a"
            ]
        ]
    },
    {
        "id": "2ea1e99be30211b2",
        "type": "http response",
        "z": "6654f6e517e71542",
        "g": "e27dd930f7ebb7e8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 300,
        "y": 320,
        "wires": []
    },
    {
        "id": "67e4df38392a472a",
        "type": "split",
        "z": "6654f6e517e71542",
        "g": "e27dd930f7ebb7e8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "c5fcf09098ee0458"
            ]
        ]
    },
    {
        "id": "c5fcf09098ee0458",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "e27dd930f7ebb7e8",
        "name": "parse JSON",
        "func": "msg.payload = JSON.parse(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 420,
        "wires": [
            [
                "3288b51e87c0cf0e",
                "2be20fd9fe210b05"
            ]
        ]
    },
    {
        "id": "3288b51e87c0cf0e",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "e27dd930f7ebb7e8",
        "name": "Normalize message",
        "func": "msg.topic = msg.payload.io;\nmsg.mode = msg.payload.mode;\n\n// set last\nmsg.payload = msg.payload.state;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 420,
        "wires": [
            [
                "644c959c85ef1928"
            ]
        ]
    },
    {
        "id": "63308ea7f10df86b",
        "type": "websocket out",
        "z": "6654f6e517e71542",
        "g": "46e82b11dd71185d",
        "name": "Publish state",
        "server": "c4bff4d6e8023886",
        "client": "",
        "x": 2030,
        "y": 640,
        "wires": []
    },
    {
        "id": "fb55055af17a6f6c",
        "type": "link out",
        "z": "6654f6e517e71542",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "6ed0c7fefce6a48c",
            "7420abdf45b8e8f9",
            "6ce041aa81c333ee"
        ],
        "x": 1955,
        "y": 400,
        "wires": []
    },
    {
        "id": "fb8ad7aea57b6bed",
        "type": "http in",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "POST /schedule-ical",
        "url": "/schedule-ical",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "b60699c0b0671883",
                "3c19de09d6abd82b"
            ]
        ]
    },
    {
        "id": "b60699c0b0671883",
        "type": "http response",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 380,
        "y": 840,
        "wires": []
    },
    {
        "id": "d69e99cb3b05e6b9",
        "type": "file",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "Write iCal",
        "filename": "./schedule.ical/gpio.ical",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 900,
        "wires": [
            [
                "8f3387aa9461f0b0"
            ]
        ]
    },
    {
        "id": "3c19de09d6abd82b",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "Get ical property",
        "func": "msg.payload = msg.payload.ical;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 900,
        "wires": [
            [
                "d69e99cb3b05e6b9"
            ]
        ]
    },
    {
        "id": "c86891a9cd694b46",
        "type": "http in",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "GET /schedule-ical",
        "url": "/schedule-ical",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "e4d0b3b50d6a3c74"
            ]
        ]
    },
    {
        "id": "b293c827d775ebfe",
        "type": "http response",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "passffile",
        "statusCode": "200",
        "headers": {
            "Content-Type": "text/calendar"
        },
        "x": 1120,
        "y": 720,
        "wires": []
    },
    {
        "id": "150cc4f5a92e2036",
        "type": "file in",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "read ./schedule.ical/gpio.ical",
        "filename": "./schedule.ical/gpio.ical",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 900,
        "y": 720,
        "wires": [
            [
                "b293c827d775ebfe"
            ]
        ]
    },
    {
        "id": "e4d0b3b50d6a3c74",
        "type": "exec",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "command": "test -f ./schedule.ical/gpio.ical",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "test -f ./schedule.ical/gpio.ical",
        "x": 390,
        "y": 720,
        "wires": [
            [],
            [],
            [
                "351bfdb306226ff8"
            ]
        ]
    },
    {
        "id": "ef3684694d00fd12",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "empty content",
        "func": "msg.payload = '';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 820,
        "wires": [
            [
                "d69e99cb3b05e6b9",
                "db52e3808a0e4d48"
            ]
        ]
    },
    {
        "id": "351bfdb306226ff8",
        "type": "filter",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "router code",
        "property": "payload.code",
        "propertyType": "msg",
        "asArray": false,
        "itemProperty": "payload",
        "itemPropertyType": "item",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str",
                "output": 1
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str",
                "output": 2
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 630,
        "y": 720,
        "wires": [
            [
                "150cc4f5a92e2036"
            ],
            [
                "ef3684694d00fd12"
            ]
        ]
    },
    {
        "id": "db52e3808a0e4d48",
        "type": "http response",
        "z": "6654f6e517e71542",
        "g": "0acc06ab9565b279",
        "name": "passffile 201",
        "statusCode": "201",
        "headers": {
            "Content-Type": "text/calendar"
        },
        "x": 1130,
        "y": 820,
        "wires": []
    },
    {
        "id": "1714093af39e1ecf",
        "type": "ical-sensor",
        "z": "6654f6e517e71542",
        "g": "3069d0b288ab8525",
        "confignode": "4e04a4d03b8d4fb4",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "cron": "",
        "name": "Calendar sensor",
        "offsettype": "",
        "offset": "",
        "offsetUnitstype": "",
        "offsetUnits": "",
        "eventtypes": "events",
        "eventtypestype": "eventtypes",
        "calendar": "",
        "calendartype": "str",
        "triggertype": "trigger",
        "trigger": "always",
        "timezone": "UTC",
        "timezonetype": "timezone",
        "dateformat": "{ \"timeStyle\": \"short\", \"dateStyle\": \"short\" }",
        "dateformattype": "json",
        "language": "en",
        "languagetype": "language",
        "filterProperty": "summary",
        "filterPropertytype": "filterProperty",
        "filterOperator": "between",
        "filterOperatortype": "filterOperator",
        "filtertype": "str",
        "filter2type": "str",
        "filter2": "",
        "filter": "",
        "combineResponse": false,
        "x": 560,
        "y": 580,
        "wires": [
            [
                "5eef3ad2022205c8"
            ],
            []
        ]
    },
    {
        "id": "2ed07befb9e49e7c",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "46e82b11dd71185d",
        "name": "Prepare ws",
        "func": "msg.payload = {\n    state: msg.payload,\n    io: msg.topic,\n    mode: msg.mode\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 580,
        "wires": [
            [
                "63308ea7f10df86b"
            ]
        ]
    },
    {
        "id": "5eef3ad2022205c8",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "3069d0b288ab8525",
        "name": "control",
        "func": "\nif (msg.payload.on === false) {\n    msg.payload = 0;\n    msg.topic = 'gpio/*';\n} else {\n    msg.topic = msg.payload.categories[1];\n    msg.payload = 1;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 580,
        "wires": [
            [
                "7043f089e62cf40c",
                "644c959c85ef1928"
            ]
        ]
    },
    {
        "id": "7043f089e62cf40c",
        "type": "debug",
        "z": "6654f6e517e71542",
        "g": "3069d0b288ab8525",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 540,
        "wires": []
    },
    {
        "id": "644c959c85ef1928",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "a91e2c4450d81c14",
        "name": "Auto/manual switch",
        "func": "const statePrefix = 'manualstate_';\n\nconst modes = {\n    auto: 'auto',\n    manual: 'manual'\n};\n\n// handle gpio/*\nif (msg.topic === 'gpio/*') {\n\n    const manuals = flow.keys().filter(key => key.startsWith(statePrefix));\n\n    const manualModes = manuals.reduce((acc, key) => {\n        acc[key.substring(statePrefix.length)] = flow.get(key);\n        return acc;\n    }, {});\n\n    axios.get('http://localhost:1880/flows')\n        .then(function (response) {\n            const gpioNodes = response.data.filter(n => n.type === 'rpi-gpio out');\n\n            gpioNodes.map(node => {\n                return {\n                    topic: node.info,\n                    payload: manualModes[node.info] === undefined ? msg.payload : manualModes[node.info],\n                    mode: manualModes[node.info] === undefined ? modes.auto : modes.manual\n                }\n            }).forEach(message => node.send(message));\n\n            node.done();\n        });\n\n    return;\n}\n\n\nconst stateKey = (statePrefix + msg.topic).replaceAll(' ', '_');\n\nif (msg.mode === modes.manual) {\n    flow.set(stateKey, msg.payload);\n}\nif (msg.mode === modes.auto) {\n    flow.set(stateKey, undefined);\n}\n\nconst manualState = flow.get(stateKey);\n\nif (manualState !== undefined) {\n    msg.payload = manualState;\n    msg.mode = modes.manual;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "axios",
                "module": "axios"
            }
        ],
        "x": 1780,
        "y": 400,
        "wires": [
            [
                "fb55055af17a6f6c",
                "2ed07befb9e49e7c",
                "1ec92144d1e66faf"
            ]
        ]
    },
    {
        "id": "2be20fd9fe210b05",
        "type": "debug",
        "z": "6654f6e517e71542",
        "g": "e27dd930f7ebb7e8",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 320,
        "wires": []
    },
    {
        "id": "1ec92144d1e66faf",
        "type": "debug",
        "z": "6654f6e517e71542",
        "g": "a91e2c4450d81c14",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1820,
        "y": 440,
        "wires": []
    },
    {
        "id": "0655c63f03be8248",
        "type": "http in",
        "z": "6654f6e517e71542",
        "g": "31b6deb47a9e7be4",
        "name": "",
        "url": "/send-io-state",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "8f3387aa9461f0b0",
                "bcb3d789004b5e9d"
            ]
        ]
    },
    {
        "id": "8f3387aa9461f0b0",
        "type": "function",
        "z": "6654f6e517e71542",
        "g": "31b6deb47a9e7be4",
        "name": "map",
        "func": "msg.payload = 0;\nmsg.topic = 'gpio/*';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 620,
        "wires": [
            [
                "644c959c85ef1928"
            ]
        ]
    },
    {
        "id": "bcb3d789004b5e9d",
        "type": "http response",
        "z": "6654f6e517e71542",
        "g": "31b6deb47a9e7be4",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1540,
        "y": 580,
        "wires": []
    },
    {
        "id": "f9cff9ae712a9da6",
        "type": "comment",
        "z": "6654f6e517e71542",
        "name": "Force reset all state after calendar update",
        "info": "",
        "x": 1420,
        "y": 740,
        "wires": []
    },
    {
        "id": "0b45580f21df7c6a",
        "type": "rpi-gpio out",
        "z": "56e1b27d8d230e3f",
        "name": "Zone 1",
        "pin": "12",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 680,
        "y": 440,
        "wires": [],
        "info": "gpio/1"
    },
    {
        "id": "05e046d8a67ed56c",
        "type": "rpi-gpio out",
        "z": "56e1b27d8d230e3f",
        "name": "Zone 2",
        "pin": "16",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 680,
        "y": 520,
        "wires": [],
        "info": "gpio/2"
    },
    {
        "id": "6ed0c7fefce6a48c",
        "type": "link in",
        "z": "56e1b27d8d230e3f",
        "name": "Kert link in",
        "links": [
            "fb55055af17a6f6c"
        ],
        "x": 305,
        "y": 480,
        "wires": [
            [
                "64fee8339fb62dc2"
            ]
        ]
    },
    {
        "id": "64fee8339fb62dc2",
        "type": "switch",
        "z": "56e1b27d8d230e3f",
        "name": "GPIO router",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "gpio/1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gpio/2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gpio/3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gpio/5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gpio/6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "0b45580f21df7c6a"
            ],
            [
                "05e046d8a67ed56c"
            ],
            [
                "f163a93b1b43035b"
            ],
            [
                "528f8913dfc444d2"
            ],
            [
                "c973bbeb43612f31"
            ]
        ]
    },
    {
        "id": "f163a93b1b43035b",
        "type": "rpi-gpio out",
        "z": "56e1b27d8d230e3f",
        "name": "Zone 3",
        "pin": "20",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 680,
        "y": 580,
        "wires": [],
        "info": "gpio/3"
    },
    {
        "id": "528f8913dfc444d2",
        "type": "rpi-gpio out",
        "z": "56e1b27d8d230e3f",
        "name": "Zone 5",
        "pin": "5",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 680,
        "y": 640,
        "wires": [],
        "info": "gpio/5"
    },
    {
        "id": "c973bbeb43612f31",
        "type": "rpi-gpio out",
        "z": "56e1b27d8d230e3f",
        "name": "Zone 6",
        "pin": "13",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 680,
        "y": 700,
        "wires": [],
        "info": "gpio/6"
    },
    {
        "id": "zxl7jen16tkmodwa",
        "type": "rpi-gpio out",
        "z": "5b1f4133f210d4ec",
        "name": "Zone 4",
        "pin": "4",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 580,
        "y": 180,
        "wires": [],
        "info": "gpio/4"
    },
    {
        "id": "7420abdf45b8e8f9",
        "type": "link in",
        "z": "5b1f4133f210d4ec",
        "name": "Test kert link in",
        "links": [
            "fb55055af17a6f6c"
        ],
        "x": 135,
        "y": 180,
        "wires": [
            [
                "d5b45fabb0a0d1c1"
            ]
        ]
    },
    {
        "id": "d5b45fabb0a0d1c1",
        "type": "switch",
        "z": "5b1f4133f210d4ec",
        "name": "GPIO router",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "gpio/4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "zxl7jen16tkmodwa"
            ]
        ]
    }
]